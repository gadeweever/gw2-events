<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GW2.NET</name>
    </assembly>
    <members>
        <member name="T:GW2DotNET.V1.Guilds.DataProvider">
            <summary>The data provider for the guild api</summary>
            <remarks>
            This data provider will supply the user with a list of guilds. 
            As there is currently no way to get a complete list of guilds this implementation
            will require the user to know either the guild name, or the guild id. 
            When the user requests a guild the data provider will first look in the cache
            and see if a guild with that name/id is already present. If it is it will return the guild
            from the cache. If no guild with said name/id is present in the cache the data provider
            will query the api for said guild. After the query has completed the data provider will
            add the guild to the cache and subsequent calls to that guild will be done against the cache.
            The users also has the possibility to get a complete collection of all guilds
            currently in the cache.
            </remarks>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.DataProvider.guildCache">
            <summary>
            The guild cache.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.DataProvider.apiManager">
            <summary>The api manager.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.DataProvider.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Guilds.DataProvider"/> class.</summary>
            <param name="apiManager">The api Manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.DataProvider.GetSingleGuild(System.String)">
            <summary>
            Gets a single guild from the api.
            </summary>
            <param name="guildName">
            The name of the guild.
            </param>
            <returns>
            A <see cref="T:GW2DotNET.V1.Guilds.Models.Guild"/>.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.DataProvider.GetSingleGuild(System.Guid)">
            <summary>
            Gets a single guild from the api.
            </summary>
            <param name="guildId">
            The id of the guild.
            </param>
            <returns>
            A <see cref="T:GW2DotNET.V1.Guilds.Models.Guild"/>.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.DataProvider.ClearCache">
            <summary>
            Clears the guild cache for all already downloaded guilds.
            </summary>
            <exception cref="T:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException">
            Thrown when the cache could not be cleared as it was already empty.
            </exception>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.DataProvider.All">
            <summary>
            Gets a collection of all guilds currently in the cache.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Guilds.DataProviders.GuildData">
            <summary>
            The guild data provider.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.DataProviders.GuildData.guildCache">
            <summary>
            The guild cache.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.DataProviders.GuildData.guildCacheSyncObject">
            <summary>
                This object will be used to synchronize access to the guild cache.
                You MUST lock this object any time you modify the guild cache in
                order to maintain thread safety.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.DataProviders.GuildData.apiManager">
            <summary>
                Stores the GW2ApiManager that instantiated this object
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.DataProviders.GuildData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Guilds.DataProviders.GuildData"/> class.</summary>
            <param name="apiManager">The api Manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.DataProviders.GuildData.GetGuildFromIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets a single guild by ID asynchronously.
            </summary>
            <param name="guildId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.DataProviders.GuildData.GetGuildFromNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a single guild by name asynchronously.
            </summary>
            <param name="guildName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.DataProviders.GuildData.Item(System.Guid)">
            <summary>
            Gets a single guild by ID from the cache if present, or from the API if not.
            </summary>
            <param name="guildId">
            The guild id.
            </param>
            <returns>
            The <see cref="T:GW2DotNET.V1.Guilds.Models.Guild"/>.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.DataProviders.GuildData.Item(System.String)">
            <summary>
                Gets a single guild by name from the cache if present, or from the API if not.
            </summary>
            <param name="guildName">The name of the guild</param>
            <returns>
                The <see cref="T:GW2DotNET.V1.Guilds.Models.Guild"/>
            </returns>
        </member>
        <member name="T:GW2DotNET.V1.Guilds.Models.Guild">
            <summary>
            Represents a guild in the game.
            </summary>
            <summary>
            Represents a guild in the game.
            </summary>
            <summary>
            Represents a guild in the game.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.Models.Guild.id">
            <summary>
            The id of the guild.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.#ctor(System.Guid,System.String,System.String,GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Guilds.Models.Guild"/> class.</summary>
            <param name="id">The id of the guild.</param>
            <param name="name">The name of the guild.</param>
            <param name="tag">The guild tag.</param>
            <param name="emblem">The guild emblem.</param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.op_Equality(GW2DotNET.V1.Guilds.Models.Guild,GW2DotNET.V1.Guilds.Models.Guild)">
            <summary>
            Checks if two instances of <see cref="T:GW2DotNET.V1.Guilds.Models.Guild"/> are equal.
            </summary>
            <param name="guildA">
            The first guild.
            </param>
            <param name="guildB">
            The second guild.
            </param>
            <returns>
            true if both instances are the same, otherwise false.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.op_Inequality(GW2DotNET.V1.Guilds.Models.Guild,GW2DotNET.V1.Guilds.Models.Guild)">
            <summary>
            Checks if two instances of <see cref="T:GW2DotNET.V1.Guilds.Models.Guild"/> are not equal.
            </summary>
            <param name="guildA">
            The first emblem.
            </param>
            <param name="guildB">
            The second emblem.
            </param>
            <returns>
            true if both instances are not the same, otherwise false.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.Equals(GW2DotNET.V1.Guilds.Models.Guild)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="obj">Another object to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.Id">
            <summary>
            Gets the guild id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.Name">
            <summary>
            Gets the guild name.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.Tag">
            <summary>
            Gets the guild tag.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.Emblem">
            <summary>
            Gets the guild emblem.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem">
            <summary>
            Represents a guild emblem.
            </summary>
            <summary>
            Represents a guild emblem.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.GuildEmblemFlags},System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem"/> class. 
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem"/> class.</summary>
            <param name="background">The id of the background image.</param>
            <param name="foreground">The id of the foreground image.</param>
            <param name="flags">The emblem flags.</param>
            <param name="backgroundColour">The background colour.</param>
            <param name="foregroundPrimaryColour">The primary colour of the foreground.</param>
            <param name="foregroundsecondaryColour">The secondary colour of the foreground.</param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.op_Equality(GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem,GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem)">
            <summary>
            Checks if two instances of <see cref="T:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem"/> are equal.
            </summary>
            <param name="emblemA">
            The first emblem.
            </param>
            <param name="emblemB">
            The second emblem.
            </param>
            <returns>
            true if both instances are the same, otherwise false
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.op_Inequality(GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem,GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem)">
            <summary>
            Checks if two instances of <see cref="T:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem"/> are not equal.
            </summary>
            <param name="emblemA">
            The first emblem.
            </param>
            <param name="emblemB">
            The second emblem.
            </param>
            <returns>
            true if both instances are the not the same, otherwise false.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.Equals(GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="obj">Another object to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.Background">
            <summary>
            Gets the background image id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.Foreground">
            <summary>
            Gets the foreground image id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.Flags">
            <summary>
            Gets the emblem flags.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.BackgroundColour">
            <summary>
            Gets the background colour.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.ForegroundPrimaryColour">
            <summary>
            Gets the primary foreground colour.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.ForegroundSecondaryColour">
            <summary>
            Gets the secondary foreground colour.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.GuildEmblemFlags">
            <summary>
            Enumerates all possible guild emblem flags.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.GuildEmblemFlags.FlipBackgroundHorizontal">
            <summary>
            The background is flipped horizontal.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.GuildEmblemFlags.FlipBackgroundVertical">
            <summary>
            The background is flipped vertical.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.GuildEmblemFlags.FlipForegroundHorizontal">
            <summary>
            The foreground is flipped horizontal.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Guilds.Models.Guild.GuildEmblem.GuildEmblemFlags.FlipForegroundVertical">
            <summary>
            The foreground is flipped vertical.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.ApiManager">
            <summary>
            This is the one and only class that is directly instantiated
            by the caller. All functionality is accessed through the
            properties of this object.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.IApiManager.ClearCache">
            <summary>
            Clears the cache for all data providers.
            WARNING! there is  no undo!
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.IApiManager.GetLatestBuild">
            <summary>Gets the latest build from the server.</summary>
            <remarks>
            This function will query the server for the current build. 
            After a query this method will return the current build to the user.
            It will also store the new build in the <see cref="P:GW2DotNET.V1.ApiManager.Build"/> property and therefore cache it.
            </remarks>
            <returns>
            The latest build.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Build">
            <summary>Gets the build.</summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Language">
            <summary>Gets or sets the language.</summary>
            <remarks>This property sets the language.
            This will also clear the complete cache
            so the user will get the data from the api in the set language.</remarks>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Logger">
            <summary>Gets the logger.</summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Continents">
            <summary>Gets the continent data.</summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.FloorData">
            <summary>Gets the floor data.</summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Maps">
            <summary>Gets the maps data.</summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Colours">
            <summary>
            Gets the ColourData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Events">
            <summary>
            Gets the EventData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.GuildData">
            <summary>Gets the instance of the guild data provider.</summary>
            <remarks>This property is the entry point to the guild api.
            From here the user can access all the information the guild api has to offer.</remarks>
            <seealso cref="T:GW2DotNET.V1.Guilds.DataProvider"/>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Guilds">
            <summary>
            Gets the GuildData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Items">
            <summary>
            Gets the ItemData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Recipes">
            <summary>
            Gets the RecipeData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.WvWMatchData">
            <summary>Gets the instance of the world versus world data provider.</summary>
            /// <remarks>This property is the entry point to the world versus world api.
            From here the user can access all the information the world versus world api has to offer.</remarks>
            <seealso cref="T:GW2DotNET.V1.WvW.DataProvider"/>
        </member>
        <member name="P:GW2DotNET.V1.IApiManager.Worlds">
            <summary>
            Gets the WorldData object.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.logger">
            <summary>Backing field for the event logger.</summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.build">
            <summary>The build.</summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.continentDataOld">
            <summary>Backing field for the continent data.</summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.mapDataOld">
            <summary>Backing field for the map data.</summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.colourDataOld">
            <summary>
            Backing field for Colours property
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.eventDataOld">
            <summary>
            Backing field for Events property
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.floorDataOld">
            <summary>The floor data.</summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.guildDataOld">
            <summary>
            Backing field for Guilds property
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.itemDataOld">
            <summary>
            Backing field for Items property
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.matchData">
            <summary>
            Backing field for wvwMatches property
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.recipeDataOld">
            <summary>
            Backing field for Recipes property
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.worldDataOld">
            <summary>
            Backing field for Worlds property
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.language">
            <summary>
            Stores the language set by the constructor
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.ApiManager.guildData">
            <summary>Stores the instance of the guild data provider.</summary>
        </member>
        <member name="M:GW2DotNET.V1.ApiManager.#ctor">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.ApiManager"/> class.</summary>
        </member>
        <member name="M:GW2DotNET.V1.ApiManager.#ctor(GW2DotNET.V1.Infrastructure.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.ApiManager"/> class.
            </summary>
            <param name="language">
            The language for things such as world names.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.ApiManager.ClearCache">
            <summary>
            Clears the cache for all data providers.
            WARNING! there is  no undo!
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.ApiManager.GetLatestBuild">
            <summary>Gets the latest build from the server.</summary>
            <remarks>
            This function will query the server for the current build. 
            After a query this method will return the current build to the user.
            It will also store the new build in the <see cref="P:GW2DotNET.V1.ApiManager.Build"/> property and therefore cache it.
            </remarks>
            <returns>
            The latest build.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Build">
            <summary>Gets the build.</summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Language">
            <summary>Gets or sets the language.</summary>
            <remarks>This property sets the language.
            This will also clear the complete cache
            so the user will get the data from the api in the set language.</remarks>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Logger">
            <summary>Gets the logger.</summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Continents">
            <summary>Gets the continent data.</summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.FloorData">
            <summary>Gets the floor data.</summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Maps">
            <summary>Gets the maps data.</summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Colours">
            <summary>
            Gets the ColourData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Events">
            <summary>
            Gets the EventData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.GuildData">
            <summary>Gets the instance of the guild data provider.</summary>
            <remarks>This property is the entry point to the guild api.
            From here the user can access all the information the guild api has to offer.</remarks>
            <seealso cref="T:GW2DotNET.V1.Guilds.DataProvider"/>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Guilds">
            <summary>
            Gets the GuildData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Items">
            <summary>
            Gets the ItemData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Recipes">
            <summary>
            Gets the RecipeData object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.WvWMatchData">
            <summary>Gets the instance of the world versus world data provider.</summary>
            /// <remarks>This property is the entry point to the world versus world api.
            From here the user can access all the information the world versus world api has to offer.</remarks>
            <seealso cref="T:GW2DotNET.V1.WvW.DataProvider"/>
        </member>
        <member name="P:GW2DotNET.V1.ApiManager.Worlds">
            <summary>
            Gets the WorldData object.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Infrastructure.ApiCall">
            <summary>Contains static methods to call the guild wars 2 API.</summary>
            <summary>Contains static methods to call the guild wars 2 API.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ApiCall.GetContent``1(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},GW2DotNET.V1.Infrastructure.ApiCall.Categories)">
            <summary>
            Calls the API and returns a CLI object of the specified type.
            </summary>
            <param name="apiMethod">The API method to call.</param>
            <param name="arguments">The arguments to supply to the method.</param>
            <param name="category">The category the method is in.</param>
            <typeparam name="T">The type to convert the raw API result into.</typeparam>
            <returns>An object converted to <see cref="!:T"/>.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ApiCall.GetJson(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},GW2DotNET.V1.Infrastructure.ApiCall.Categories)">
            <summary>
            Gets the JSON string from the API.
            </summary>
            <param name="apiMethod">The API method to call.</param>
            <param name="arguments">The arguments to supply to the method.</param>
            <param name="category">The category the method is in.</param>
            <returns>The JSON encoded <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ApiCall.SwitchApiLocation(GW2DotNET.V1.Infrastructure.ApiCall.Categories)">
            <summary>
            Do a switch based on the place where the caller wants to go. 
            Simple solution to keep the call in one method and not two.
            </summary>
            <param name="category">
            The category of the api.
            </param>
            <returns>
            The <see cref="T:RestSharp.RestClient"/>.
            </returns>
        </member>
        <member name="T:GW2DotNET.V1.Infrastructure.ApiCall.Categories">
            <summary>
            Enumerates the possible categories a request can be.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.ApiCall.Categories.World">
            <summary>
            The world part of the API.
            Includes world names, map names and events
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.ApiCall.Categories.WvW">
            <summary>
            The world versus world part of the API.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.ApiCall.Categories.Items">
            <summary>
            The items part of the API
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.ApiCall.Categories.Guild">
            <summary>
            The guild part of the api.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.ApiCall.Categories.Miscellaneous">
            <summary>
            The miscellaneous part of the api.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Infrastructure.BooleanConverter">
            <summary>
            The boolean converter.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.BooleanConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">
            The json writer to use.
            </param>
            <param name="value">
            The value to convert to a boolean value.
            </param>
            <param name="serializer">
            The serializer to use.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.BooleanConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            The read json.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <param name="objectType">
            The object type.
            </param>
            <param name="existingValue">
            The existing value.
            </param>
            <param name="serializer">
            The serializer.
            </param>
            <returns>
            The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.BooleanConverter.CanConvert(System.Type)">
            <summary>
            Checks if the type can be converted to a boolean value
            </summary>
            <param name="objectType">
            The object type.
            </param>
            <returns>
            True if the type can be converted to a boolean value, otherwise false.
            </returns>
        </member>
        <member name="T:GW2DotNET.V1.Infrastructure.ChatLinks">
            <summary>
            Contains static methods to get the chat link for a specific ingame object.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ChatLinks.CoinChatLink(System.Int32)">
            <summary>
            Converts a amount of money in a chat link.
            </summary>
            <param name="valueInCopper">
            The value of the money.
            </param>
            <returns>
            A chat link usable ingame.
            </returns>
            <remarks>The value to this method has to be supplied in copper. 
            One gold is 100 silver and one silver is 100 copper, making one gold 10000 copper.
            </remarks>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ChatLinks.ItemChatLink(System.Int16,System.Int32)">
            <summary>
            Converts an item into a chat link.
            </summary>
            <param name="quantity">
            The item quantity.
            </param>
            <param name="itemId">
            The item id.
            </param>
            <returns>
            A chat link representing the item, which is usable ingame.
            </returns>
            <remarks>
            The item quantity is the amount of items which the user wants to link
            (e.g. 10 Copper Ore), while the item id is the id gained from the api
            or another location.
            </remarks>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ChatLinks.TextChatLink(System.Int32)">
            <summary>
            The text chat link.
            </summary>
            <param name="textIdentifier">
            The text identifier.
            </param>
            <returns>
            A chat link representing certain phrases used ingame.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ChatLinks.MapChatLink(System.Int32)">
            <summary>
            The map chat link.
            </summary>
            <param name="mapPointId">
            The location id.
            </param>
            <returns>
            A chat link representing either a waypoint or a point of interest on the game map.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ChatLinks.SkillChatLink(System.Int32)">
            <summary>
            The skill chat link.
            </summary>
            <param name="skillId">
            The skill id.
            </param>
            <returns>
            A chat link representing a skill.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ChatLinks.TraitChatLink(System.Int32)">
            <summary>
            The trait chat link.
            </summary>
            <param name="traitId">
            The trait id.
            </param>
            <returns>
            A chat link representing a trait.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.ChatLinks.RecipeChatLink(System.Int32)">
            <summary>
            The recipe chat link.
            </summary>
            <param name="recipeId">
            The recipe id.
            </param>
            <returns>
            A chat link representing a recipe.
            </returns>
        </member>
        <member name="T:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException">
            <summary>The cache empty exception.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException"/> class.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException"/> class.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The Exception that is the cause of the current exception, 
            or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Infrastructure.Exceptions.CacheEmptyException"/> class.</summary>
            <param name="info">The info.</param>
            <param name="ctxt">The context.</param>
        </member>
        <member name="T:GW2DotNET.V1.Infrastructure.Language">
            <summary>
            Enumerates all possible languages to get the content.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Language.En">
            <summary>
            The english language.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Language.Fr">
            <summary>
            The french language
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Language.De">
            <summary>
            The german language.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Language.Es">
            <summary>
            The spanish language
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Infrastructure.Logging.EventLogger">
            <summary>The logging framework.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Logging.EventLogger.traceSource">
            <summary>The trace source.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Logging.EventLogger.completeListener">
            <summary>The complete listener.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Logging.EventLogger.randomNumberGen">
            <summary>The random number gen.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Logging.EventLogger.warningsLog">
            <summary>The warnings log path.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Infrastructure.Logging.EventLogger.completeLog">
            <summary>The complete log path.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Logging.EventLogger.#ctor">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Infrastructure.Logging.EventLogger"/> class.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Logging.EventLogger.ChangeLoggingLevel(System.Diagnostics.SourceLevels)">
            <summary>The change logging level.</summary>
            <param name="loggingLevel">The new logging level.</param>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Logging.EventLogger.WriteToLog(System.String,System.Diagnostics.TraceEventType)">
            <summary>The write to log.</summary>
            <param name="message">The message.</param>
            <param name="eventType">The event type.</param>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Logging.EventLogger.WriteToLog(System.Exception,System.Diagnostics.TraceEventType)">
            <summary>The write to log.</summary>
            <param name="exception">The exception.</param>
            <param name="eventType">The event type.</param>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Logging.EventLogger.SetLogFilePaths">
            <summary>Sets the log file paths.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Infrastructure.Logging.EventLogger.RandomNumber">
            <summary>Generates a random umber to use as a event id.</summary>
            <returns>The random number as <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="P:GW2DotNET.V1.Infrastructure.Logging.EventLogger.CompleteLogFilePath">
            <summary>Gets the complete log file path.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Infrastructure.Logging.EventLogger.ErrorLogFilePath">
            <summary>Gets the error log file path.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Infrastructure.Logging.EventLogger.LogFileDirectory">
            <summary>Gets the log file directory.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.DataProvider.ColourData">
            <summary>
            The colour data provider.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.ColourData.apiManager">
            <summary>
            The language.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.ColourData.coloursCache">
            <summary>
            The colours cache.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ColourData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.DataProvider.ColourData"/> class.
            </summary>
            <param name="apiManager">The API manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ColourData.GetAllColoursAsync(System.Threading.CancellationToken)">
            <summary>
            Get all colors asynchronously.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ColourData.GetColourFromIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets a single colour from id asynchronously.
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ColourData.GetColourFromNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a single colour from name asynchronously.
            </summary>
            <param name="name"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ColourData.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ColourData.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ColourData.GetColours">
            <summary>
            Gets all colours from the api server.
            </summary>
            <returns>
            The <see cref="T:System.Collections.IEnumerable"/>.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.ColourData.Colours">
            <summary>
            Gets the colours.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.ColourData.Item(System.Int32)">
            <summary>
            Gets a single colour from the colours cache.
            </summary>
            <param name="id">
            The id of the colour.
            </param>
            <returns>
            The <see cref="T:GW2DotNET.V1.Items.Models.GwColour"/>.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.ColourData.Item(System.String)">
            <summary>
            Gets a single colour from the colours cache.
            </summary>
            <param name="name">
            The name of the colour.
            </param>
            <returns>
            The <see cref="T:GW2DotNET.V1.Items.Models.GwColour"/>.
            </returns>
        </member>
        <member name="T:GW2DotNET.V1.Items.DataProvider.CacheDataBase">
            <summary>The item data cache.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.CacheDataBase.Build">
            <summary>Gets or sets the build.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.GwColour">
            <summary>
            Represents a colour in the game.
            </summary>
            <summary>
            Represents a colour in the game.
            </summary>
            <summary>
            Represents a colour in the game.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.GwColour.id">
            <summary>
            The colour id.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.#ctor(System.Int32,System.String,System.Int32[],GW2DotNET.V1.Items.Models.GwColour.ColourDetails,GW2DotNET.V1.Items.Models.GwColour.ColourDetails,GW2DotNET.V1.Items.Models.GwColour.ColourDetails)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.GwColour"/> class.</summary>
            <param name="id">The colour id.</param>
            <param name="name">The name of the colour</param>
            <param name="baseRgb">The base Rgb.</param>
            <param name="clothDetail">The colour modifying attributes on cloth.</param>
            <param name="leatherDetail">The  colour modifying attributes on leather.</param>
            <param name="metalDetail">The colour modifying attributes on metal.</param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.op_Equality(GW2DotNET.V1.Items.Models.GwColour,GW2DotNET.V1.Items.Models.GwColour)">
            <summary>
            Checks if two instances of <see cref="T:GW2DotNET.V1.Items.Models.GwColour"/> are equal.
            </summary>
            <param name="colourA">
            The first colour.
            </param>
            <param name="colourB">
            The second colour.
            </param>
            <returns>
            true if both instances are the same, otherwise false.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.op_Inequality(GW2DotNET.V1.Items.Models.GwColour,GW2DotNET.V1.Items.Models.GwColour)">
            <summary>
            Checks if two instances of <see cref="T:GW2DotNET.V1.Items.Models.GwColour"/> are not equal.
            </summary>
            <param name="colourA">
            The first colour.
            </param>
            <param name="colourB">
            The second colour.
            </param>
            <returns>
            true if both instances are not the same, otherwise false.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.Equals(GW2DotNET.V1.Items.Models.GwColour)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.Id">
            <summary>
            Gets the colour id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.BaseRgb">
            <summary>
            Gets the base rgb.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.Cloth">
            <summary>
            Gets the colour modifying attributes on cloth.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.Leather">
            <summary>
            Gets the colour modifying attributes on leather.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.Metal">
            <summary>
            Gets the colour modifying attributes on metal.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.GwColour.ColourDetails">
            <summary>
            The colour modifying attributes.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.GwColour.ColourDetails"/> class.
            </summary>
            <param name="brightness">
            The brightness.
            </param>
            <param name="contrast">
            The contrast.
            </param>
            <param name="hue">
            The hue.
            </param>
            <param name="saturation">
            The saturation.
            </param>
            <param name="lightness">
            The lightness.
            </param>
            <param name="rgb">
            Pre calculated rgb values for some convenience.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.Equals(GW2DotNET.V1.Items.Models.GwColour.ColourDetails)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.op_Equality(GW2DotNET.V1.Items.Models.GwColour.ColourDetails,GW2DotNET.V1.Items.Models.GwColour.ColourDetails)">
            <summary>The ==.</summary>
            <param name="detailsA">The details a.</param>
            <param name="detailsB">The details b.</param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.op_Inequality(GW2DotNET.V1.Items.Models.GwColour.ColourDetails,GW2DotNET.V1.Items.Models.GwColour.ColourDetails)">
            <summary>The !=.</summary>
            <param name="detailsA">The details a.</param>
            <param name="detailsB">The details b.</param>
            <returns></returns>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.Brightness">
            <summary>
            Gets the brightness.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.Contrast">
            <summary>
            Gets the contrast.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.Hue">
            <summary>
            Gets the hue.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.Saturation">
            <summary>
            Gets the saturation.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.Lightness">
            <summary>
            Gets the lightness.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.ColourDetails.RgbValues">
            <summary>
            Gets the rgb values.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.GwColour.RgbColour">
            <summary>
            The rgb colour.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.GwColour.RgbColour.#ctor(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.GwColour.RgbColour"/> class.
            </summary>
            <param name="colourValues">
            The colour values.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.RgbColour.Red">
            <summary>
            Gets the red colour.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.RgbColour.Green">
            <summary>
            Gets the green colour.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.GwColour.RgbColour.Blue">
            <summary>
            Gets the blue colour.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.DataProvider.ItemData">
            <summary>
            The item data provider.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.ItemData.apiManager">
            <summary>The api manager.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.ItemData.itemIdCacheFileName">
            <summary>
            The name of the file on disk where we will cache the item data.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.ItemData.itemIdCache">
            <summary>
            The item id cache.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.ItemData.itemsCache">
            <summary>
            The items cache.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ItemData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.DataProvider.ItemData"/> class.</summary>
            <param name="apiManager">The api Manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ItemData.#ctor(System.String,GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.DataProvider.ItemData"/> class.</summary>
            <param name="savePath">The path to the file (without file name and trailing slash).</param>
            <param name="apiManager">The api Manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ItemData.GetAllItemsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all items asynchronously.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ItemData.GetItemFromIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets one item from ID asynchronously.
            </summary>
            <param name="itemId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ItemData.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ItemData.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.ItemData.SaveCacheFile(System.String,GW2DotNET.V1.Items.DataProvider.CacheDataBase)">
            <summary>
            Saves the contents of the cache to the file system.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.ItemData.AllItems">
            <summary>
            Gets an IEnumerable of all item descriptions, populating
            the cache first if necessary. This is private. Callers
            get access to this list by enumerating the ItemData
            object.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.ItemData.Item(System.Int32)">
            <summary>
            Gets a single item from the cache.
            </summary>
            <param name="itemId">The item id.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Items.Models.Items.Item"/>.</returns>
        </member>
        <member name="T:GW2DotNET.V1.Items.DataProvider.RecipeData">
            <summary>
            The recipe data provider.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.RecipeData.recipeIdCache">
            <summary>
            The recipe id cache.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.DataProvider.RecipeData.recipeCache">
            <summary>
            The recipes.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.RecipeData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.DataProvider.RecipeData"/> class.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.RecipeData.GetAllRecipesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all recipes asynchronously.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.RecipeData.GetRecipeFromIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets one recipe from ID asynchronously.
            </summary>
            <param name="recipeId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.RecipeData.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.Items.DataProvider.RecipeData.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.RecipeData.RecipeIdCache">
            <summary>
            Gets the cache of all discovered recipe ids.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.RecipeData.Recipes">
            <summary>
            Gets all the recipes from the server.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.DataProvider.RecipeData.Item(System.Int32)">
            <summary>
            Gets a single recipe from the server.
            </summary>
            <param name="recipeId">
            The recipe id.
            </param>
            <returns>
            The <see cref="T:GW2DotNET.V1.Items.Models.Recipe"/>.
            </returns>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Armour">
            <summary>
            The armour.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Armour.#ctor(GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourClass,GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.InfusionSlot},GW2DotNET.V1.Items.Models.Items.InfixUpgrade,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Armour"/> class.</summary>
            <param name="armourClass">The armour class.</param>
            <param name="type">The type.</param>
            <param name="suffixId">The suffix id.</param>
            <param name="infusionSlots">The infusion slots.</param>
            <param name="infixUpgrade">The infix upgrade.</param>
            <param name="defense">The defense.</param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Armour.Class">
            <summary>
            Gets the armour class.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Armour.Type">
            <summary>
            Gets the armour type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Armour.SuffixId">
            <summary>
            Gets the suffix id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Armour.InfusionSlots">
            <summary>
            Gets the infusion slots.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Armour.InfixUpgrade">
            <summary>
            Gets the infix upgrade.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Armour.Defense">
            <summary>
            Gets the defense.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourClass">
            <summary>
            Enumerates the armour class.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourClass.Clothing">
            <summary>
            The item is clothing.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourClass.Light">
            <summary>
            The item is light armour.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourClass.Medium">
            <summary>
            The item is medium armour.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourClass.Heavy">
            <summary>
            The item is heavy armour.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType">
            <summary>
            Enumerates the armour type.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType.Boots">
            <summary>
            The item belong in the boots slot.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType.Helm">
            <summary>
            The item belong in the helm slot.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType.Leggings">
            <summary>
            The item belong in the leggings slot.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType.Gloves">
            <summary>
            The item belong in the gloves slot.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType.Shoulders">
            <summary>
            The item belong in the shoulders slot.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType.Coat">
            <summary>
            The item belong in the coat slot.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Armour.ArmourType.HelmAquatic">
            <summary>
            The item belong in the aquatic helmet slot.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Back">
            <summary>
            The item in the back slot.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Back.#ctor(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.InfusionSlot},GW2DotNET.V1.Items.Models.Items.InfixUpgrade)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Back"/> class.
            </summary>
            <param name="suffixId">
            The suffix id.
            </param>
            <param name="infusionSlots">
            The infusion slots.
            </param>
            <param name="infixUpgrade">
            The infix upgrade.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Back.SuffixId">
            <summary>
            Gets the suffix id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Back.InfusionSlots">
            <summary>
            Gets the infusion slots.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Back.InfixUpgrade">
            <summary>
            Gets the infix upgrade.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Bag">
            <summary>
            A bag.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Bag.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Bag"/> class.
            </summary>
            <param name="size">
            The size.
            </param>
            <param name="noSellOrSort">
            The no sell or sort.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Bag.Size">
            <summary>
            Gets the bag size.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Bag.NoSellOrSort">
            <summary>
            Gets a value indicating whether the bag can be sold or sorted.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Consumable">
            <summary>
            The consumable.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.#ctor(GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Consumable"/> class.
            </summary>
            <param name="type">
            The type.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType">
            <summary>
            The consumable type.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Unlock">
            <summary>
            A consumable to unlock certain things.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.AppearanceChange">
            <summary>
            A consumable to change the appearance.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.ContractNpc">
            <summary>
            A consumable to summon a contract npc.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Food">
            <summary>
            A food consumable.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Booze">
            <summary>
            An alcoholic beverage.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Generic">
            <summary>
            A generic consumable.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Halloween">
            <summary>
            A halloween consumable.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Immediate">
            <summary>
            An immediate consumable.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Transmutation">
            <summary>
            A consumable to transmutate items.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Utility">
            <summary>
            An utility consumable.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Consumable.ConsumableType.Unknown">
            <summary>
            An unknown consumable.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Container">
            <summary>
            The container.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Container.#ctor(GW2DotNET.V1.Items.Models.Items.SubType.Container.ContainerType)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Container"/> class. 
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Container"/> class.</summary>
            <param name="type">The type.</param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Container.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Container.ContainerType">
            <summary>
            Enumerates the container type.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Container.ContainerType.Default">
            <summary>
            A default container.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Container.ContainerType.GiftBox">
            <summary>
            A gift box.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.CraftingMaterial">
            <summary>
            The crafting material.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.GameType">
            <summary>
            Enumerates the possible game types an item can be dropped in.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.GameType.Activity">
            <summary>
            The item will drop while doing activities.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.GameType.Dungeon">
            <summary>
            The item will drop in dungeons.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.GameType.Pve">
            <summary>
            The item will drop in player vs environment.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.GameType.Pvp">
            <summary>
            The item will be dropped in player vs player.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.GameType.PvpLobby">
            <summary>
            Item will be dropped in the pvp lobby(possible hearts of the mists?).
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.GameType.Wvw">
            <summary>
            Item will be dropped in world vs world.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo">
            <summary>
            The gizmo.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo.#ctor(GW2DotNET.V1.Items.Models.Items.SubType.Gizmo.GizmoType)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo"/> class.
            </summary>
            <param name="type">
            The type.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo.GizmoType">
            <summary>
            Enumerates the gizmo types.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo.GizmoType.Default">
            <summary>
            The default gizmo.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo.GizmoType.RentableContractNpc">
            <summary>
            A rentable contract npc.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Gizmo.GizmoType.UnlimitedConsumable">
            <summary>
            An unlimited consumable.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.InfixUpgrade">
            <summary>
            The infix upgrade.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.#ctor(System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.InfixUpgrade"/> class.
            </summary>
            <param name="attributes">
            The attributes.
            </param>
            <param name="buff">
            The buff.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.Buff">
            <summary>
            Gets the buff.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute">
            <summary>
            The item attribute.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.#ctor(GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute"/> class.
            </summary>
            <param name="targetAttribute">
            The target attribute.
            </param>
            <param name="modifier">
            The modifier.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.Attribute">
            <summary>
            Gets the attribute.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.Modifier">
            <summary>
            Gets the modifier.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute">
            <summary>
            Enumerates the possible attribute the modifier targets.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute.CritDamage">
            <summary>
            Critical damage is modified.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute.ConditionDamage">
            <summary>
            Condition damage is modified.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute.Healing">
            <summary>
            Healing is modified.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute.Vitality">
            <summary>
            Vitality is modified.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute.Power">
            <summary>
            Power is modified.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute.Toughness">
            <summary>
            Toughness is modified.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.InfixUpgrade.ItemAttribute.TargetAttribute.Precision">
            <summary>
            Precision is modified.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.InfusionSlot">
            <summary>
            The infusion slot.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.InfusionSlot.#ctor(System.String,System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.UpgradeFlag})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.InfusionSlot"/> class.
            </summary>
            <param name="item">
            The item.
            </param>
            <param name="flags">
            The flags.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.InfusionSlot.Item">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.InfusionSlot.Flags">
            <summary>
            Gets the item flags.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.Item">
            <summary>
            The item.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.Item.id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.Item.#ctor(System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.ItemRestrictions},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.ItemFlags},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.GameType},System.Int32,GW2DotNET.V1.Items.Models.Items.ItemRarity,System.Int32,GW2DotNET.V1.Items.Models.Items.ItemType,System.String,System.String,System.Int32,GW2DotNET.V1.Items.Models.Items.SubType.Weapon,GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent,GW2DotNET.V1.Items.Models.Items.SubType.Trophy,GW2DotNET.V1.Items.Models.Items.SubType.Trinket,GW2DotNET.V1.Items.Models.Items.SubType.Tool,GW2DotNET.V1.Items.Models.Items.SubType.Gizmo,GW2DotNET.V1.Items.Models.Items.SubType.Tool,GW2DotNET.V1.Items.Models.Items.SubType.CraftingMaterial,GW2DotNET.V1.Items.Models.Items.SubType.Container,GW2DotNET.V1.Items.Models.Items.SubType.Consumable,GW2DotNET.V1.Items.Models.Items.SubType.Bag,GW2DotNET.V1.Items.Models.Items.SubType.Back,GW2DotNET.V1.Items.Models.Items.SubType.Armour)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.Item"/> class.
            </summary>
            <param name="restrictions">
            The restrictions.
            </param>
            <param name="flags">
            The flags.
            </param>
            <param name="gameTypes">
            The game types.
            </param>
            <param name="vendorValue">
            The vendor value.
            </param>
            <param name="rarity">
            The rarity.
            </param>
            <param name="level">
            The level.
            </param>
            <param name="type">
            The type.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="id">
            The id.
            </param>
            <param name="weaponDetails">
            The weapon details.
            </param>
            <param name="upgradeComponentDetails">
            The upgrade component details.
            </param>
            <param name="trophyDetails">
            The trophy details.
            </param>
            <param name="trinketDetails">
            The trinket details.
            </param>
            <param name="toolDetails">
            The tool details.
            </param>
            <param name="gizmoDetails">
            The gizmo details.
            </param>
            <param name="gatheringDetails">
            The gathering details.
            </param>
            <param name="craftingMaterialDetails">
            The crafting material details.
            </param>
            <param name="containerDetails">
            The container details.
            </param>
            <param name="consumableDetails">
            The consumable details.
            </param>
            <param name="bagDetails">
            The bag details.
            </param>
            <param name="backDetails">
            The back details.
            </param>
            <param name="armourDetails">
            The armour details.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.Item.op_Equality(GW2DotNET.V1.Items.Models.Items.Item,GW2DotNET.V1.Items.Models.Items.Item)">
            <summary>
            Determines if two instances of the specified <see cref="T:GW2DotNET.V1.Items.Models.Items.Item"/> are equal.
            </summary>
            <param name="itemA">
            The first item.
            </param>
            <param name="itemB">
            The second item.
            </param>
            <returns>
            true if the two instances are equal, otherwise false.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.Item.op_Inequality(GW2DotNET.V1.Items.Models.Items.Item,GW2DotNET.V1.Items.Models.Items.Item)">
            <summary>
            Determines if two instances of the specified <see cref="T:GW2DotNET.V1.Items.Models.Items.Item"/> are not equal.
            </summary>
            <param name="itemA">
            The first item.
            </param>
            <param name="itemB">
            The second item.
            </param>
            <returns>
            true if the two instances are not equal, otherwise false.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.Item.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="obj">Another object to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.Item.Equals(GW2DotNET.V1.Items.Models.Items.Item)">
            <summary>
            Indicates whether this instance and a specified <see cref="T:GW2DotNET.V1.Items.Models.Items.Item"/> are equal.
            </summary>
            <returns>
            true if <paramref name="other"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="other">Another <see cref="T:GW2DotNET.V1.Items.Models.Items.Item"/> to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.Item.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Level">
            <summary>
            Gets the minimum level to use.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Rarity">
            <summary>
            Gets the rarity.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.VendorValue">
            <summary>
            Gets the vendor value.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.GameTypes">
            <summary>
            Gets the game types the item is dropped in.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Flags">
            <summary>
            Gets the item flags.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.Restrictions">
            <summary>
            Gets the restrictions.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.WeaponDetails">
            <summary>
            Gets the weapon details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.UpgradeComponentDetails">
            <summary>
            Gets the upgrade component details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.TrophyDetails">
            <summary>
            Gets the trophy details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.TrinketDetails">
            <summary>
            Gets the trinket details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.ToolDetails">
            <summary>
            Gets the tool details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.GizmoDetails">
            <summary>
            Gets the gizmo details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.GatheringDetails">
            <summary>
            Gets the gathering details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.CraftingMaterialDetails">
            <summary>
            Gets the crafting material details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.ContainerDetails">
            <summary>
            Gets the container details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.ConsumableDetails">
            <summary>
            Gets the consumable details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.BagDetails">
            <summary>
            Gets the bag details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.BackDetails">
            <summary>
            Gets the back details.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.Item.ArmourDetails">
            <summary>
            Gets the armour details.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.ItemFlags">
            <summary>
            Enumerates the possible item flags.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.NoSell">
            <summary>
            Cannot be sold at a vendor.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.SoulbindOnAcquire">
            <summary>
            Item is soulbound on acquire.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.AccountBound">
            <summary>
            Account Bound
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.NoSalvage">
            <summary>
            Cannot be Salvaged
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.NotUpgradeable">
            <summary>
            Cannot be Upgraded
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.Unique">
            <summary>
            The unique.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.NoMysticForge">
            <summary>
            Cannot be used in the Mystic Forge
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.HideSuffix">
            <summary>
             Hide the item's suffix
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.SoulBindOnUse">
            <summary>
            Soulbind on Use or Equip
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemFlags.NoUnderwater">
            <summary>
            Cannot be used underwater
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Tool">
            <summary>
            A tool, includes salvage tools.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Tool.#ctor(GW2DotNET.V1.Items.Models.Items.SubType.Tool.ToolType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Tool"/> class.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="charges">
            The charges.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Tool.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Tool.Charges">
            <summary>
            Gets the charges.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Tool.ToolType">
            <summary>
            Enumerates the tool types.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Tool.ToolType.Salvage">
            <summary>
            A salvage tool.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Tool.ToolType.Logging">
            <summary>
            A logging tool.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Tool.ToolType.Foraging">
            <summary>
            A foraging tool.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Tool.ToolType.Mining">
            <summary>
            A mining tool.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Trinket">
            <summary>
            The trinket.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.#ctor(GW2DotNET.V1.Items.Models.Items.SubType.Trinket.TrinketType,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.InfusionSlot},GW2DotNET.V1.Items.Models.Items.InfixUpgrade)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Trinket"/> class.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="suffixId">
            The suffix id.
            </param>
            <param name="infusionSlots">
            The infusion slots.
            </param>
            <param name="infixUpgrade">
            The infix upgrade.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.SuffixId">
            <summary>
            Gets the suffix id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.InfusionSlots">
            <summary>
            Gets the infusion slots.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.InfixUpgrade">
            <summary>
            Gets the infix upgrade.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.TrinketType">
            <summary>
            Enumerates the trinket types.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.TrinketType.Ring">
            <summary>
            The trinket is a ring.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.TrinketType.Accessory">
            <summary>
            The trinket is an accessory.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Trinket.TrinketType.Amulet">
            <summary>
            The trinket is an amulet.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Trophy">
            <summary>
            The trophy.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.UpgradeFlag">
            <summary>
            Enumerates the upgrade flags.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.UpgradeFlag.Defense">
            <summary>
            The item is a defense item.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.UpgradeFlag.Offense">
            <summary>
            The item is a offense item.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.UpgradeFlag.Utility">
            <summary>
            The item is a utility item.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Weapon">
            <summary>
            The weapon.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.#ctor(GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType,System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.InfusionSlot},System.Int32,System.Int32,System.Nullable{System.Int32},GW2DotNET.V1.Items.Models.Items.InfixUpgrade,System.Int32,GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponDamageType)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.Weapon"/> class.
            </summary>
            <param name="type">
            The weapon type.
            </param>
            <param name="infusionSlots">
            The infusion slots.
            </param>
            <param name="maxPower">
            The max power.
            </param>
            <param name="minPower">
            The min power.
            </param>
            <param name="suffixId">
            The suffix id.
            </param>
            <param name="infixUpgrade">
            The infix upgrade.
            </param>
            <param name="defense">
            The defense.
            </param>
            <param name="damageType">
            The damage type.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.SuffixId">
            <summary>
            Gets the suffix id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.MinPower">
            <summary>
            Gets the minimum power.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.MaxPower">
            <summary>
            Gets the maximum power.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.InfusionSlots">
            <summary>
            Gets the infusion slots.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.InfixUpgrade">
            <summary>
            Gets the infix upgrade.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.Defense">
            <summary>
            Gets the defense.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.DamageType">
            <summary>
            Gets the damage type.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType">
            <summary>
            Enumerates all possible weapon types.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.LongBow">
            <summary>
            A long bow.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Pistol">
            <summary>
            A pistol.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Warhorn">
            <summary>
            A warhorn.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Sword">
            <summary>
            A sword.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Staff">
            <summary>
            A staff.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Hammer">
            <summary>
            A hammer.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Trident">
            <summary>
            A trident.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Scepter">
            <summary>
            A scepter.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Speargun">
            <summary>
            A speargun.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Mace">
            <summary>
            A mace.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Axe">
            <summary>
            An axe.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Torch">
            <summary>
            A torch.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Dagger">
            <summary>
            A dagger.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Shield">
            <summary>
            A shield.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Harpoon">
            <summary>
            A harpoon.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Greatsword">
            <summary>
            A greatsword.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Rifle">
            <summary>
            A rifle.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Focus">
            <summary>
            A focus.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.ShortBow">
            <summary>
            A short bow.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.Toy">
            <summary>
            A toy.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.TwoHandedToy">
            <summary>
            A two handed toy.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponType.LargeBundle">
            <summary>
            A large bundle (duh!)
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponDamageType">
            <summary>
            Enumerates all possible weapon damage types.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponDamageType.Physical">
            <summary>
            The weapon does physical damage.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponDamageType.Fire">
            <summary>
            The weapon does fire damage.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponDamageType.Ice">
            <summary>
            The weapon does ice damage.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.Weapon.WeaponDamageType.Lightning">
            <summary>
            The weapon does lightning damage.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Recipe">
            <summary>
            The recipe model.
            </summary>
            <summary>
            The recipe model.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Recipe.id">
            <summary>
            The id of the recipe.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.#ctor(System.Int32,GW2DotNET.V1.Items.Models.RecipeType,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Recipe.Ingredient})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Recipe"/> class.
            </summary>
            <param name="id">
            The id of the recipe.
            </param>
            <param name="type">
            The type of the recipe.
            </param>
            <param name="outputItemId">
            The output item id.
            </param>
            <param name="outputItemCount">
            The output item count.
            </param>
            <param name="minRating">
            The minimal rating.
            </param>
            <param name="timeToCraft">
            The time to craft in milliseconds.
            </param>
            <param name="ingredients">
            The ingredients.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.Equals(GW2DotNET.V1.Items.Models.Recipe)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.Id">
            <summary>
            Gets the recipe id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.Type">
            <summary>
            Gets the recipe type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.OutputItemId">
            <summary>
            Gets the output item id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.OutputItemCount">
            <summary>
            Gets the output item count.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.MinRating">
            <summary>
            Gets the minimal rating.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.TimeToCraft">
            <summary>
            Gets the time to craft in milliseconds.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.Ingredients">
            <summary>
            Gets the ingredients.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Recipe.Ingredient">
            <summary>
            The ingredients of a recipe.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Recipe.Ingredient.id">
            <summary>
            The id of the ingredient.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.Ingredient.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Recipe.Ingredient"/> class.
            </summary>
            <param name="id">
            The id of the ingredient.
            </param>
            <param name="count">
            The ingredient count.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.Ingredient.op_Equality(GW2DotNET.V1.Items.Models.Recipe.Ingredient,GW2DotNET.V1.Items.Models.Recipe.Ingredient)">
            <summary>
            Determines whether two specified instances of <see crdef="Ingredient"/> are equal.
            </summary>
            <param name="ingredientA">The first object to compare.</param>param>
            <param name="ingredientB">The second object to compare. </param>
            <returns>true if ingredientA and ingredientB represent the same ingredient; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.Ingredient.op_Inequality(GW2DotNET.V1.Items.Models.Recipe.Ingredient,GW2DotNET.V1.Items.Models.Recipe.Ingredient)">
            <summary>
            Determines whether two specified instances of <see crdef="Ingredient"/> are not equal.
            </summary>
            <param name="ingredientA">The first object to compare.</param>param>
            <param name="ingredientB">The second object to compare. </param>
            <returns>true if ingredientA and ingredientB do not represent the same ingredient; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.Ingredient.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="obj">Another object to compare to. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.Ingredient.Equals(GW2DotNET.V1.Items.Models.Recipe.Ingredient)">
            <summary>
            Indicates whether this instance and the specified <see cref="T:GW2DotNET.V1.Items.Models.Recipe.Ingredient"/> are equal.
            </summary>
            <returns>
            true if <paramref name="ingredient"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="ingredient">Another object to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Recipe.Ingredient.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.Ingredient.Id">
            <summary>
            Gets the id of the ingredient.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Recipe.Ingredient.Count">
            <summary>
            Gets the ingredient count.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.RecipeType">
            <summary>
            Enumerates all possible recipe types.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Axe">
            <summary>
            The recipe crafts an axe.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Dagger">
            <summary>
            The recipe crafts a dagger.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Hammer">
            <summary>
            The recipe crafts a hammer.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Greatsword">
            <summary>
            The recipe crafts a greatsword.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Mace">
            <summary>
            The recipe crafts a mace.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Shield">
            <summary>
            The recipe crafts a shield.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Sword">
            <summary>
            The recipe crafts a sword.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Harpoon">
            <summary>
            The recipe crafts a harpoon.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.LongBow">
            <summary>
            The recipe crafts a long bow.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Pistol">
            <summary>
            The recipe crafts a pistol.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Rifle">
            <summary>
            The recipe crafts a rifle.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.ShortBow">
            <summary>
            The recipe crafts a short bow.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Speargun">
            <summary>
            The recipe crafts a speargun.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Torch">
            <summary>
            The recipe crafts a torch.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Warhorn">
            <summary>
            The recipe crafts a warhorn.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Focus">
            <summary>
            The recipe crafts a focus.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Potion">
            <summary>
            The recipe crafts a potion.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Scepter">
            <summary>
            The recipe crafts a scepter.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Staff">
            <summary>
            The recipe crafts a staff.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Trident">
            <summary>
            The recipe crafts a trident.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Dessert">
            <summary>
            The recipe crafts a dessert.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Dye">
            <summary>
            The recipe crafts a dye.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Feast">
            <summary>
            The recipe crafts a feast.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.IngredientCooking">
            <summary>
            The recipe crafts a cooking ingredient.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Meal">
            <summary>
            The recipe crafts a meal.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Snack">
            <summary>
            The recipe crafts a snack.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Soup">
            <summary>
            The recipe crafts a soup.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Seasoning">
            <summary>
            The recipe crafts a seasoning.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Amulet">
            <summary>
            The recipe crafts an amulet.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Earring">
            <summary>
            The recipe crafts an earring.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Ring">
            <summary>
            The recipe crafts a ring.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Boots">
            <summary>
            The recipe crafts a pair of boots.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Coat">
            <summary>
            The recipe crafts a coat.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Gloves">
            <summary>
            The recipe crafts a glove.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Helm">
            <summary>
            The recipe crafts a helm.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Insignia">
            <summary>
            The recipe crafts an insignia.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Leggings">
            <summary>
            The recipe crafts a leggings.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Shoulders">
            <summary>
            The recipe crafts a shoulder.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Bag">
            <summary>
            The recipe crafts a bag.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Inscription">
            <summary>
            The recipe crafts an inscription.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Component">
            <summary>
            The recipe crafts a component.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Consumable">
            <summary>
            The recipe crafts a consumable.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Refinement">
            <summary>
            The recipe crafts a refinement.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.UpgradeComponent">
            <summary>
            The recipe crafts an upgrade component.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.RecipeType.Bulk">
            <summary>
            The recipe crafts a bulk.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.ItemRestrictions">
            <summary>
            Enumerates all possible item restrictions.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRestrictions.Asura">
            <summary>
            The item is for asura only.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRestrictions.Human">
            <summary>
            The item is for humans only.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRestrictions.Charr">
            <summary>
            The item is for charr only.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRestrictions.Norn">
            <summary>
            The item is for norn only.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRestrictions.Sylvari">
            <summary>
            The item is for sylvari only.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRestrictions.Guardian">
            <summary>
            The item is for guardians only.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRestrictions.Warrior">
            <summary>
            The item is for warriors only.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent">
            <summary>
            The upgrade component.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.#ctor(GW2DotNET.V1.Items.Models.Items.InfixUpgrade,GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeType,System.String,System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.UpgradeFlag},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent"/> class.
            </summary>
            <param name="infixUpgrade">
            The infix upgrade.
            </param>
            <param name="type">
            The type.
            </param>
            <param name="suffix">
            The suffix.
            </param>
            <param name="infusionUpgradeType">
            The infusion upgrade type.
            </param>
            <param name="flags">
            The flags.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.Type">
            <summary>
            Gets the upgrade type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.Suffix">
            <summary>
            Gets the suffix.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.InfusionUpgradeType">
            <summary>
            Gets the infusion upgrade type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.InfixUpgrade">
            <summary>
            Gets the infix upgrade.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.Flags">
            <summary>
            Gets the flags.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags">
            <summary>
            Enumerates all upgrade component flags.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.HeavyArmor">
            <summary>
            A heavy armor.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.MediumArmor">
            <summary>
            A medium armor.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.LightArmor">
            <summary>
            A light armor.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Axe">
            <summary>
            An axe.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Dagger">
            <summary>
            A dagger.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Focus">
            <summary>
            A focus.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Greatsword">
            <summary>
            A greatsword.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Hammer">
            <summary>
            A hammer.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Harpoon">
            <summary>
            A harpoon.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.LongBow">
            <summary>
            A long bow.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Mace">
            <summary>
            A mace.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Pistol">
            <summary>
            A pistol.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Rifle">
            <summary>
            A rifle.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Scepter">
            <summary>
            A scepter.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Shield">
            <summary>
            A shield.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.ShortBow">
            <summary>
            A short bow.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Speargun">
            <summary>
            A speargun.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Staff">
            <summary>
            A staff.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Sword">
            <summary>
            A sword.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Torch">
            <summary>
            A torch.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Trident">
            <summary>
            A trident.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Trinket">
            <summary>
            A trinket.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeComponentFlags.Warhorn">
            <summary>
            A warhorn.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeType">
            <summary>
            Enumerates all possible upgrade types.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeType.Rune">
            <summary>
            A rune.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeType.Default">
            <summary>
            A default upgrade.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeType.Sigil">
            <summary>
            A sigil.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.SubType.UpgradeComponent.UpgradeType.Gem">
            <summary>
            A gem.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.ItemRarity">
            <summary>
            Enumerates the item rarity.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Junk">
            <summary>
            The item is junk.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Basic">
            <summary>
            The item is of basic quality.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Fine">
            <summary>
            The item is of fine quality.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Masterwork">
            <summary>
            The item is a masterwork.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Rare">
            <summary>
            The item is of rare quality.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Exotic">
            <summary>
            The item is of exotic quality.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Ascended">
            <summary>
            The item is an ascended item.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemRarity.Legendary">
            <summary>
            The item is a legendary.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Items.Models.Items.ItemType">
            <summary>
            Enumerates all possible types an item can be.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Weapon">
            <summary>
            The item is a weapon.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.UpgradeComponent">
            <summary>
            The item is an upgrade component.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Trophy">
            <summary>
            The item is a trophy.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Trinket">
            <summary>
            The item is a trinket.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Tool">
            <summary>
            The item is a tool.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.MiniPet">
            <summary>
            The item is a mini pet.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Gizmo">
            <summary>
            The item is a gizmo.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Gathering">
            <summary>
            The item is a gathering tool.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.CraftingMaterial">
            <summary>
            The item is a crafting material.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Container">
            <summary>
            The item is a container.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Consumable">
            <summary>
            The item is a consumable.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Bag">
            <summary>
            The item is a bag.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Back">
            <summary>
            The item occupies the back slot.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.Items.Models.Items.ItemType.Armor">
            <summary>
            The item is an armor piece.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.DataProvider.ContinentData">
            <summary>Provides the ApiManager with the map api data.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.ContinentData.manager">
            <summary>The api manager.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.ContinentData.continentsCache">
            <summary>The continents.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.ContinentData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.DataProvider.ContinentData"/> class.</summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.ContinentData.GetAllContinentsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all continents asynchronously.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.ContinentData.GetContinentFromIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a continent by ID asynchronously.
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.ContinentData.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.ContinentData.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Maps.DataProvider.ContinentData.Continents">
            <summary>Gets all continents from the api.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.DataProvider.ContinentData.Item(System.Int32)">
            <summary>Gets a continent by it's id.</summary>
            <param name="id">The id of the continent.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.Continent"/>.</returns>
            <remarks>This method will get a single continent from the api. 
            However since the api returns a complete list of continents as an array 
            this property will call the <see cref="P:GW2DotNET.V1.Maps.DataProvider.ContinentData.Continents"/> property and
            then filter the result further with LINQ. This also ensures that
            further calls are more rapid. 
            </remarks>
        </member>
        <member name="T:GW2DotNET.V1.Maps.DataProvider.MapFloorData">
            <summary>The map floor data.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.MapFloorData.manager">
            <summary>The manager.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.MapFloorData.mapFloors">
            <summary>The map floors.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.MapFloorData.mapFloorsSyncObject">
            <summary>
            Sync object for thread safety. You MUST lock this
            object before touching the private continentsCache object.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.MapFloorData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.DataProvider.MapFloorData"/> class.</summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.MapFloorData.GetMapFloorAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets a map floor asynchronously.
            </summary>
            <param name="continentId"></param>
            <param name="floor"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:GW2DotNET.V1.Maps.DataProvider.MapFloorData.Item(System.Int32,System.Int32)">
            <summary>Gets a map floor by it's continent and floor id.</summary>
            <param name="continentId">The continent id.</param>
            <param name="floor">The floor.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.MapFloor"/>.</returns>
        </member>
        <member name="T:GW2DotNET.V1.Maps.DataProvider.MapsData">
            <summary>Provides the api manager with the maps data.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.MapsData.manager">
            <summary>The manager.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.MapsData.mapsCache">
            <summary>The maps.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.DataProvider.MapsData.mapsCacheSyncObject">
            <summary>
            Sync object for thread safety. You MUST lock this
            object before touching the private continentsCache object.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.MapsData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.DataProvider.MapsData"/> class.</summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.MapsData.GetAllMapsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all maps asynchronously.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.MapsData.GetMapFromIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets a map from an ID asynchronously.
            </summary>
            <param name="mapId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.MapsData.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.DataProvider.MapsData.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.Maps.DataProvider.MapsData.Maps">
            <summary>Gets all maps from the api.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.DataProvider.MapsData.Item(System.String)">
            <summary>Returns a map by its name</summary>
            <param name="mapName">The map name.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.Map"/>.</returns>
        </member>
        <member name="P:GW2DotNET.V1.Maps.DataProvider.MapsData.Item(System.Int32)">
            <summary>Returns a map by its id</summary>
            <param name="mapId">The map id.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.Map"/>.</returns>
            <remarks>This method will get a single map from the api. 
            However since the api returns a complete list of maps as an array 
            this property will call the <see cref="P:GW2DotNET.V1.Maps.DataProvider.MapsData.Maps"/> property and
            then filter the result further with LINQ. This also ensures that
            further calls are more rapid. 
            </remarks>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.Continent">
            <summary>Represents a continent.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Continent.#ctor(System.String,System.Int32[],System.Int32,System.Int32,System.Int32[])">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.Continent"/> class.</summary>
            <param name="name">The name.</param>
            <param name="continentDims">The continent dims.</param>
            <param name="minimumZoom">The minimum zoom.</param>
            <param name="maximumZoom">The maximum zoom.</param>
            <param name="floors">The floors.</param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Continent.ResolveId(System.Int32)">
            <summary>Resolves the id for the continent.</summary>
            <param name="idToResolve">The id to resolve.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.Continent"/> with a resolved id.</returns>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Continent.Id">
            <summary>Gets the id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Continent.Name">
            <summary>Gets the name.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Continent.ContinentDims">
            <summary>Gets the continent dims.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Continent.MinimumZoom">
            <summary>Gets the minimum zoom.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Continent.MaximumZoom">
            <summary>Gets the maximum zoom.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Continent.Floors">
            <summary>Gets the floors.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.Map">
            <summary>Represents a map.</summary>
            <summary>Represents a map.</summary>
            <summary>Represents a map.</summary>
            <summary>Represents a map.</summary>
            <summary>Represents a map.</summary>
            <summary>Represents map.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.Models.Map.ContinentId">
            <summary>Gets the continent id.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32[],System.Int32,System.String,System.Int32,System.Single[0:,0:],System.Single[0:,0:],System.Collections.Generic.IEnumerable{GW2DotNET.V1.Maps.Models.Map.PointOfInterest},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Maps.Models.Map.Task},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Maps.Models.Map.Sector},System.Collections.Generic.IEnumerable{GW2DotNET.V1.Maps.Models.Map.SkillChallenge})">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.Map"/> class.</summary>
            <param name="mapId">The id.</param>
            <param name="name">The name.</param>
            <param name="minimumLevel">The minimum level.</param>
            <param name="maximumLevel">The maximum level.</param>
            <param name="defaultFloor">The default floor.</param>
            <param name="floors">The floors.</param>
            <param name="regionId">The region id.</param>
            <param name="regionName">The region name.</param>
            <param name="continentId">The continent id.</param>
            <param name="mapRectangle">The map rectangle.</param>
            <param name="continentRectangle">The continent rectangle.</param>
            <param name="pointsOfInterest">The points Of Interest.</param>
            <param name="tasks">The tasks.</param>
            <param name="sectors">The sectors.</param>
            <param name="skillChallenges">The skill Challenges.</param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.op_Equality(GW2DotNET.V1.Maps.Models.Map,GW2DotNET.V1.Maps.Models.Map)">
            <summary>
            Determines whether two specified instances of <see crdef="Map"/> are equal.
            </summary>
            <param name="mapA">The first object to compare.</param>param>
            <param name="mapB">The second object to compare. </param>
            <returns>true if mapA and mapB represent the same map; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.op_Inequality(GW2DotNET.V1.Maps.Models.Map,GW2DotNET.V1.Maps.Models.Map)">
            <summary>
            Determines whether two specified instances of <see crdef="Map"/> are not equal.
            </summary>
            <param name="mapA">The first object to compare.</param>param>
            <param name="mapB">The second object to compare. </param>
            <returns>true if mapA and mapB do not represent the same map; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.</returns>
            <param name="obj">Another object to compare to.</param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.Equals(GW2DotNET.V1.Maps.Models.Map)">
            <summary>
            Indicates whether this instance and a specified <see cref="T:GW2DotNET.V1.Maps.Models.Map"/> are equal.
            </summary>
            <returns>true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.</returns>
            <param name="obj">Another object to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.ResolveId(System.Int32)">
            <summary>Resolves the id for the map.</summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.Map"/> with a resolved id.</returns>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.ResolveContinent(GW2DotNET.V1.Maps.Models.Continent)">
            <summary>Resolves a continent by its id.</summary>
            <param name="continent">The continent.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.Map"/>.</returns>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Id">
            <summary>Gets the id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Name">
            <summary>Gets the name.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.MinimumLevel">
            <summary>Gets the minimum level.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.MaximumLevel">
            <summary>Gets the maximum level.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.DefaultFloor">
            <summary>Gets the default floor.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Floors">
            <summary>Gets the floors.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.RegionId">
            <summary>Gets the region id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.RegionName">
            <summary>Gets the region name.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Continent">
            <summary>Gets the continent.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.MapRectangle">
            <summary>Gets the map rectangle.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.ContinentRectangle">
            <summary>Gets the continent rectangle.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.PointsOfInterest">
            <summary>Gets the points of interest.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Tasks">
            <summary>Gets the tasks.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Sectors">
            <summary>Gets the sectors.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.SkillChallenges">
            <summary>Gets the skill challenges.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.Map.PointOfInterest">
            <summary>Represents a point of interest.</summary>
            <summary>Represents a point of interest.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.#ctor(System.Int32,System.String,GW2DotNET.V1.Maps.Models.Map.PointOfInterest.PoiType,System.Int32,System.Single[])">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.Map.PointOfInterest"/> class.</summary>
            <param name="poiId">The poi id.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="floor">The floor.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.Id">
            <summary>Gets the id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.Name">
            <summary>Gets the name.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.Type">
            <summary>Gets the type.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.Floor">
            <summary>Gets the floor.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.Coordinates">
            <summary>Gets the coordinates.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.PoiType">
            <summary>Enumerates the poi type.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.PoiType.Vista">
            <summary>A vista.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.PoiType.Landmark">
            <summary>A landmark.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.PoiType.Waypoint">
            <summary>A waypoint.</summary>
        </member>
        <member name="F:GW2DotNET.V1.Maps.Models.Map.PointOfInterest.PoiType.Unlock">
            <summary>A unlock.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.Map.Sector">
            <summary>Represents a sector.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.Sector.#ctor(System.Int32,System.String,System.Int32,System.Single[])">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.Map.Sector"/> class.</summary>
            <param name="sectorId">The sector id.</param>
            <param name="name">The name.</param>
            <param name="level">The level.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Sector.Id">
            <summary>Gets the id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Sector.Name">
            <summary>Gets the name.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Sector.Level">
            <summary>Gets the level.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Sector.Coordinates">
            <summary>Gets the coordinates.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.Map.SkillChallenge">
            <summary>Represents a skill challenge.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.SkillChallenge.#ctor(System.Single[])">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.Map.SkillChallenge"/> class.</summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.SkillChallenge.Coordinates">
            <summary>Gets the coordinates.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.Map.Task">
            <summary>The task.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.Map.Task.#ctor(System.Int32,System.String,System.Int32,System.Single[])">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.Map.Task"/> class.</summary>
            <param name="taskId">The task id.</param>
            <param name="objective">The objective.</param>
            <param name="level">The level.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Task.Id">
            <summary>Gets the id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Task.Objective">
            <summary>Gets the objective.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Task.Level">
            <summary>Gets the level.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.Map.Task.Coordinates">
            <summary>Gets the coordinates.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.MapFloor">
            <summary>Represents a map floor.</summary>
            <summary>Represents a map floor.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.MapFloor.#ctor(System.Int32[],System.Collections.Generic.Dictionary{System.Int32,GW2DotNET.V1.Maps.Models.MapFloor.Region})">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.MapFloor"/> class.</summary>
            <param name="textureDims">The texture dims.</param>
            <param name="regions">The regions.</param>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.MapFloor.TextureDims">
            <summary>Gets the texture dims.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.MapFloor.Regions">
            <summary>Gets the regions.</summary>
        </member>
        <member name="T:GW2DotNET.V1.Maps.Models.MapFloor.Region">
            <summary>Represents a region.</summary>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.MapFloor.Region.#ctor(System.String,System.Int32[],System.Collections.Generic.Dictionary{System.Int32,GW2DotNET.V1.Maps.Models.Map})">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.Maps.Models.MapFloor.Region"/> class.</summary>
            <param name="name">The name.</param>
            <param name="labelCoordinates">The label coordinates.</param>
            <param name="maps">The maps.</param>
        </member>
        <member name="M:GW2DotNET.V1.Maps.Models.MapFloor.Region.ResolveId(System.Int32)">
            <summary>Resolves the Id for the current instance of the Region struct</summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:GW2DotNET.V1.Maps.Models.MapFloor.Region"/>.</returns>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.MapFloor.Region.Id">
            <summary>Gets the id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.MapFloor.Region.Name">
            <summary>Gets the name.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.MapFloor.Region.LabelCoordinates">
            <summary>Gets the label coordinates.</summary>
        </member>
        <member name="P:GW2DotNET.V1.Maps.Models.MapFloor.Region.Maps">
            <summary>Gets the maps.</summary>
        </member>
        <member name="T:GW2DotNET.V1.World.DataProvider">
            <summary>The data provider for the event api.</summary>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProvider.apiManager">
            <summary>The api manager.</summary>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProvider.worlds">
            <summary>A list of all worlds.</summary>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProvider.eventNames">
            <summary>The event names.</summary>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProvider.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.World.DataProvider"/> class.</summary>
            <param name="apiManager">The api manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProvider.GetWorld(System.Int32)">
            <summary>Gets a world by its world id.</summary>
            <param name="worldId">The world id.</param>
            <returns>The <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/>.</returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProvider.GetWorld(System.String)">
            <summary>Gets a single world by its world name.</summary>
            <param name="worldName">The world name.</param>
            <returns>The <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/>.</returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProvider.GetWorlds">
            <summary>Makes a call to the api and retrieves all worlds.</summary>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProvider.BypassCaching">
            <summary>
            Gets a value indicating whether bypass caching.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProvider.Worlds">
            <summary>Gets all worlds.</summary>
        </member>
        <member name="T:GW2DotNET.V1.World.DataProviders.EventData">
            <summary>
            A class for retrieving information about the
            state of world events.
            </summary>
            <remarks>
            Note that unlike MapData and WorldData, this class does NOT
            implement IEnumerable. This is intentional, because we do not expose
            the event names list to the caller. We only return events objects
            that have status information, not just name-id mappings.
            </remarks>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProviders.EventData.apiManager">
            <summary>
            Keep a pointer to our WorldManager here for ID resolution.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProviders.EventData.eventNamesCache">
            <summary>
            Cache the event names here
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProviders.EventData.eventsCache">
            <summary>The events cache.</summary>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.World.DataProviders.EventData"/> class.
            This should only be called by WorldManager.
            </summary>
            <param name="apiManager">An instance of GW2ApiManager to use for ID resolution</param>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.InitializeEventNamesCache">
            <summary>The initialize event names cache.</summary>
            <returns>The <see cref="!:Dictionary"/>.</returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.GetAllEventsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all events asynchronously.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.GetEventsFromWorldAsync(GW2DotNET.V1.World.Models.GwWorld,System.Threading.CancellationToken)">
            <summary>
            Gets all events for a given world asynchronously.
            </summary>
            <param name="world"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.GetEventsFromMapAsync(GW2DotNET.V1.Maps.Models.Map,System.Threading.CancellationToken)">
            <summary>
            Gets all events for a given map on all worlds asynchronously.
            </summary>
            <param name="map"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.GetEventsFromIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets one event from all worlds asynchronously.
            </summary>
            <param name="eventId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.EventData.GetEvents(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid})">
            <summary>Gets all events for all maps on all worlds.</summary>
            <param name="worldId">The world Id.</param>
            <param name="mapId">The map Id.</param>
            <param name="eventId">The event Id.</param>
            <returns>An <see cref="T:System.Collections.IEnumerable"/></returns>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.EventData.BypassCaching">
            <summary>Gets or sets a value indicating whether to bypass caching.</summary>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.EventData.EventNames">
            <summary>
            Gets the EventNames dictionary.
            This is not exposed to callers. It is for internal
            usage only.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.EventData.AllEvents">
            <summary>
            Gets the events.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.EventData.Item(GW2DotNET.V1.World.Models.GwWorld)">
            <summary>
            Gets a collection of <see cref="T:GW2DotNET.V1.World.Models.GwEvent"/>s pre-sorted with a <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/>.
            </summary>
            <param name="world">The world to pre-sort the events.</param>
            <returns>The collection of events.</returns>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.EventData.Item(GW2DotNET.V1.Maps.Models.Map)">
            <summary>
            Gets all events for a particular map on all worlds.
            </summary>
            <param name="map">The map to get all events from.</param>
            <returns>A collection of events on the specified map.</returns>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.EventData.Item(System.Guid)">
            <summary>
            Gets one event for all worlds.
            </summary>
            <param name="eventId">The id of the event to retrieve.</param>
            <returns>A collection of events with the specified event id.</returns>
        </member>
        <member name="T:GW2DotNET.V1.World.DataProviders.WorldData">
            <summary>
            Contains methods to get and modify the world data.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProviders.WorldData.apiManager">
            <summary>
            The world names will be retrieved in this language
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.DataProviders.WorldData.worldCache">
            <summary>
            Cache the world_names list here
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.WorldData.#ctor(GW2DotNET.V1.ApiManager)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.World.DataProviders.WorldData"/> class.
            This should only be called by WorldManager.
            </summary>
            <param name="apiManager">The language in which to return world names</param>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.WorldData.GetAllWorldsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all worlds asynchronously.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.WorldData.GetWorldFromIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets a world by ID asynchronously.
            </summary>
            <param name="worldId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.WorldData.GetWorldFromNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a world by name asynchronously.
            </summary>
            <param name="name"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.WorldData.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.World.DataProviders.WorldData.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.WorldData.Worlds">
            <summary>
            Gets all <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/> from the API.
            </summary>
            ReSharper disable CSharpWarnings::CS1584
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable"/> containing all world objects.
            ReSharper restore CSharpWarnings::CS1584
            </returns>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.WorldData.Item(System.Int32)">
            <summary>
            Gets a world by world ID
            </summary>
            <param name="worldId">The ID of the world</param>
            <returns>A single <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/>.</returns>
        </member>
        <member name="P:GW2DotNET.V1.World.DataProviders.WorldData.Item(System.String)">
            <summary>
            Gets a world by name
            </summary>
            <param name="name">The name of the world</param>
            <returns>A single <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/>.</returns>
        </member>
        <member name="T:GW2DotNET.V1.World.Models.GwEvent">
            <summary>
            Represents an event in the game.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEvent.mapId">
            <summary>
            The map id backing field
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEvent.eventId">
            <summary>
            The event id backing field
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEvent.worldId">
            <summary>
            The world id backing field
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEvent.state">
            <summary>
            The event state backing field
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwEvent.#ctor(System.Int32,System.Int32,System.Guid,GW2DotNET.V1.World.Models.GwEventState,GW2DotNET.V1.ApiManager)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.World.Models.GwEvent"/> class.</summary>
            <param name="worldId">The world id.</param>
            <param name="mapId">The map id.</param>
            <param name="eventId">The event id.</param>
            <param name="state">The state.</param>
            <param name="apiManager">The api Manager.</param>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwEvent.op_Equality(GW2DotNET.V1.World.Models.GwEvent,GW2DotNET.V1.World.Models.GwEvent)">
            <summary>
            Determines whether two specified instances of <see crdef="Map"/> are equal.
            </summary>
            <param name="eventA">The first object to compare.</param>param>
            <param name="eventB">The second object to compare. </param>
            <returns>true if mapA and mapB represent the same map; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwEvent.op_Inequality(GW2DotNET.V1.World.Models.GwEvent,GW2DotNET.V1.World.Models.GwEvent)">
            <summary>
            Determines whether two specified instances of <see crdef="Map"/> are not equal.
            </summary>
            <param name="a">The first object to compare.</param>param>
            <param name="b">The second object to compare. </param>
            <returns>true if mapA and mapB do not represent the same map; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwEvent.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.</returns>
            <param name="obj">Another object to compare to.</param>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwEvent.Equals(GW2DotNET.V1.World.Models.GwEvent)">
            <summary>
            Indicates whether this instance and a specified <see cref="P:GW2DotNET.V1.World.Models.GwEvent.Map"/> are equal.
            </summary>
            <returns>true if <paramref name="other"/> and this instance are the same type and represent the same value; otherwise, false.</returns>
            <param name="other">Another object to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwEvent.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwEvent.Name">
            <summary>
            Gets the name of the event.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwEvent.World">
            <summary>
            Gets the world
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwEvent.Map">
            <summary>
            Gets the map
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwEvent.EventId">
            <summary>
            Gets the event id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwEvent.State">
            <summary>
            Gets the state.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwEvent.ApiManager">
            <summary>Gets or sets the api manager.</summary>
            ToDo: Remove
        </member>
        <member name="T:GW2DotNET.V1.World.Models.GwEventState">
            <summary>
            Enumerates all possible states an event can be.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEventState.Active">
            <summary>
             The event is running now.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEventState.Success">
            <summary>
            The event has succeeded.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEventState.Fail">
            <summary>
            The event has failed.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEventState.Warmup">
            <summary>
            The event is inactive, 
            and will only become active once certain criteria are met.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEventState.Preparation">
            <summary>
            The criteria for the event to start have been met, 
            but certain activities (such as an NPC dialogue) have not completed yet. 
            After the activities have been completed, the event will become Active.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEventState.Invalid">
            <summary>
            The event is invalid. 
            For now no further information were released by Arena Net
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwEventState.Inactive">
            <summary>
            The event is not running now.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.World.Models.GwWorld">
            <summary>
            Represents a Guild Wars 2 world.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.GwWorld.id">
            <summary>
            The id of the world. This field is readonly.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwWorld.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/> class.
            </summary>
            <param name="id">The id of the world.</param>
            <param name="name">The name of the world.</param>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwWorld.op_Equality(GW2DotNET.V1.World.Models.GwWorld,GW2DotNET.V1.World.Models.GwWorld)">
            <summary>
            Determines whether two specified instances of <see crdef="GwMap"/> are equal.
            </summary>
            <param name="worldA">The first object to compare.</param>param>
            <param name="worldB">The second object to compare. </param>
            <returns>true if worldA and worldB represent the same map; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwWorld.op_Inequality(GW2DotNET.V1.World.Models.GwWorld,GW2DotNET.V1.World.Models.GwWorld)">
            <summary>
            Determines whether two specified instances of <see crdef="GwMap"/> are not equal.
            </summary>
            <param name="worldA">The first object to compare.</param>param>
            <param name="worldB">The second object to compare. </param>
            <returns>true if worldA and worldB do not represent the same map; otherwise, false.</returns>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwWorld.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.</returns>
            <param name="obj">Another object to compare to.</param>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwWorld.Equals(GW2DotNET.V1.World.Models.GwWorld)">
            <summary>
            Indicates whether this instance and a specified <see cref="T:GW2DotNET.V1.World.Models.GwWorld"/> are equal.
            </summary>
            <returns>true if <paramref name="other"/> and this instance are the same type and represent the same value; otherwise, false.</returns>
            <param name="other">Another object to compare to. </param>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.GwWorld.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwWorld.Id">
            <summary>
            Gets the id of the world.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.GwWorld.Name">
            <summary>
            Gets the name of the world.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.World.Models.WorldEventName">
            <summary>Represents an event name from he event names api.</summary>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.WorldEventName.#ctor(System.Guid,System.String)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.World.Models.WorldEventName"/> class.</summary>
            <param name="id">The id of the event.</param>
            <param name="name">The name of the event.</param>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.WorldEventName.Id">
            <summary>Gets the event id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.WorldEventName.Name">
            <summary>Gets the event name.</summary>
        </member>
        <member name="T:GW2DotNET.V1.World.Models.WorldEventNamesList">
            <summary>A collection of all event names.</summary>
        </member>
        <member name="F:GW2DotNET.V1.World.Models.WorldEventNamesList.eventNames">
            <summary>The event names.</summary>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.WorldEventNamesList.#ctor(System.Collections.Generic.List{GW2DotNET.V1.World.Models.WorldEventName})">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.World.Models.WorldEventNamesList"/> class.</summary>
            <param name="eventNames">The event names.</param>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.WorldEventNamesList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.World.Models.WorldEventNamesList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GW2DotNET.V1.World.Models.WorldEventNamesList.Count">
            <summary>Gets the number of event names.</summary>
        </member>
        <member name="T:GW2DotNET.V1.WvW.DataProvider">
            <summary>
            The data provider for the world vs world api.
            </summary>
            <remarks>
            This class will call the api server for a list of matches,
            which can be accessed by the <see cref="P:GW2DotNET.V1.WvW.DataProvider.All"/> property.
            If the users wants a single match he can call the <see cref="M:GW2DotNET.V1.WvW.DataProvider.GetSingleMatch(System.String)"/>
            method which will return a single match.
            Please note, that except the match list there is no cache and every call to GetSingleMatch method
            will cause an api call. This is a deliberate design choice as matches usually change rater fast
            and caching them is counter productive and wastes resources.
            </remarks>
        </member>
        <member name="F:GW2DotNET.V1.WvW.DataProvider.matchList">
            <summary>A internal list </summary>
        </member>
        <member name="F:GW2DotNET.V1.WvW.DataProvider.objectiveNames">
            <summary>The internal list of objective names.</summary>
        </member>
        <member name="M:GW2DotNET.V1.WvW.DataProvider.#ctor">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.WvW.DataProvider"/> class.</summary>
        </member>
        <member name="M:GW2DotNET.V1.WvW.DataProvider.GetSingleMatch(System.String)">
            <summary>Gets a single match from the api server.</summary>
            <param name="matchId">The match id.</param>
            <returns>The <see cref="T:GW2DotNET.V1.WvW.Models.WvWMatch"/>.</returns>
        </member>
        <member name="M:GW2DotNET.V1.WvW.DataProvider.GetSingleMatchAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a single match from the api server asynchronously.
            </summary>
            <param name="matchId">The match id.</param>
            <param name="cancellationToken">Propagates notification that the operation should be cancelled.</param>
            <returns>The <see cref="T:GW2DotNET.V1.WvW.Models.WvWMatch"/>.</returns>
        </member>
        <member name="M:GW2DotNET.V1.WvW.DataProvider.ClearCache">
            <summary>
            Clears the map list cache. 
            </summary>
            <remarks>
            This method will clear the cache and force a re-download of the match list
            the next time the user requests it via the <see cref="P:GW2DotNET.V1.WvW.DataProvider.All"/> property.
            </remarks>
        </member>
        <member name="M:GW2DotNET.V1.WvW.DataProvider.GetMatchList">
            <summary>Gets the list of all matches from the api server.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing all matches.</returns>
        </member>
        <member name="M:GW2DotNET.V1.WvW.DataProvider.GetObjectiveNames">
            <summary>The get objective names.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of all objective names.</returns>
        </member>
        <member name="P:GW2DotNET.V1.WvW.DataProvider.All">
            <summary>Gets a collection of all matches.</summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.DataProvider.ObjectiveNames">
            <summary>Gets the objective names.</summary>
        </member>
        <member name="T:GW2DotNET.V1.WvW.Models.MatchList">
            <summary>A list of all matches currently running on the world versus world servers.</summary>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.MatchList.#ctor(System.Collections.Generic.List{GW2DotNET.V1.WvW.Models.MatchListEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.WvW.Models.MatchList"/> class.
            </summary>
            <param name="matches">
            The list of matches.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.MatchList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.MatchList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchList.Matches">
            <summary>
            Gets a collection of all matches.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchList.Count">
            <summary>
            Gets the total number of matches currently running.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.WvW.Models.MatchListEntry">
            <summary>
            Represents an entry in the <see cref="T:GW2DotNET.V1.WvW.Models.MatchList"/>.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.MatchListEntry.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:GW2DotNET.V1.WvW.Models.MatchListEntry"/> class.</summary>
            <param name="matchId">The match id.</param>
            <param name="redWorldId">The red world id.</param>
            <param name="blueWorldId">The blue world id.</param>
            <param name="greenWorldId">The green world id.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchListEntry.MatchId">
            <summary>Gets the match id.</summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchListEntry.RedWorldId">
            <summary>
            Gets the id of the red world.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchListEntry.BlueWorldId">
            <summary>
            Gets the id of the blue world.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchListEntry.GreenWorldId">
            <summary>
            Gets the id of the green world.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchListEntry.StartTime">
            <summary>Gets the start time.</summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.MatchListEntry.EndTime">
            <summary>Gets the end time.</summary>
        </member>
        <member name="T:GW2DotNET.V1.WvW.Models.WvWMatch">
            <summary>
            Represents a world vs world match.
            </summary>
            <summary>
            Represents a world vs world match.
            </summary>
            <summary>
            Represents a world vs world match.
            </summary>
            <summary>
            Represents a world vs world match.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.WvW.Models.WvWMatch.matchId">
            <summary>
            The match id.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.WvW.Models.WvWMatch"/> class.
            </summary>
            <param name="matchId">
            The match id.
            </param>
            <param name="redWorldId">
            The red world id.
            </param>
            <param name="blueWorldId">
            The blue world id.
            </param>
            <param name="greenWorldId">
            The green world id.
            </param>
            <param name="startTime">
            The start time of the match.
            </param>
            <param name="endTime">
            The end time of the match.
            </param>
            <param name="scores">
            The scores.
            </param>
            <param name="maps">
            The maps.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.op_Equality(GW2DotNET.V1.WvW.Models.WvWMatch,GW2DotNET.V1.WvW.Models.WvWMatch)">
            <summary>The ==.</summary>
            <param name="matchA">The match a.</param>
            <param name="matchB">The match b.</param>
            <returns>true if both instances are equal.</returns>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.op_Inequality(GW2DotNET.V1.WvW.Models.WvWMatch,GW2DotNET.V1.WvW.Models.WvWMatch)">
            <summary>The !=.</summary>
            <param name="matchA">The match a.</param>
            <param name="matchB">The match b.</param>
            <returns>true if both instances are not equal.</returns>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.Equals(GW2DotNET.V1.WvW.Models.WvWMatch)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.ResolveInfos(GW2DotNET.V1.WvW.Models.MatchListEntry)">
            <summary>Resolves the missing info's only obtainable through the map list api.</summary>
            <param name="matchListEntry">The match list entry.</param>
            <returns>The <see cref="T:GW2DotNET.V1.WvW.Models.WvWMatch"/> with all its info's resolved.</returns>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.MatchId">
            <summary>
            Gets the match id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.RedWorldId">
            <summary>
            Gets the red world id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.BlueWorldId">
            <summary>
            Gets the blue world id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.GreenWorldId">
            <summary>
            Gets the green world id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.StartTime">
            <summary>
            Gets the start time of the match.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.EndTime">
            <summary>
            Gets the end time of the match.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.Scores">
            <summary>
            Gets the scores.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.Maps">
            <summary>
            Gets the maps.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap">
            <summary>
            Represents a world vs world map.
            </summary>
            <summary>
            Represents a world vs world map.
            </summary>
            <summary>
            Represents a world vs world map.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.#ctor(GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Type,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective})">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap"/> class.
            </summary>
            <param name="mapType">
            The map type.
            </param>
            <param name="scores">
            The scores.
            </param>
            <param name="objectives">
            The objectives.
            </param>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.MapType">
            <summary>
            Gets the map type.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Scores">
            <summary>
            Gets the scores.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objectives">
            <summary>
            Gets the objectives.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Type">
            <summary>
            Enumerates the objective type.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Type.RedHome">
            <summary>
            The red home.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Type.BlueHome">
            <summary>
            The blue home.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Type.GreenHome">
            <summary>
            The green home.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Type.Center">
            <summary>
            The center.
            </summary>
        </member>
        <member name="T:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective">
            <summary>
            Represents a map objective.
            </summary>
        </member>
        <member name="F:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective.id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective"/> class.
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="owner">
            The owner.
            </param>
            <param name="ownerGuild">
            The owner guild.
            </param>
            <param name="name">
            The name of the guild.
            </param>
        </member>
        <member name="M:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective.ResolveObjectiveNames(GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective)">
            <summary>Resolves the name of an objective.</summary>
            <param name="objective">The objective which supplies the name.</param>
            <returns>The <see cref="T:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective"/> with it's name resolved.</returns>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective.Owner">
            <summary>
            Gets the owner.
            </summary>
        </member>
        <member name="P:GW2DotNET.V1.WvW.Models.WvWMatch.WvWMap.Objective.OwnerGuild">
            <summary>
            Gets the owner guild.
            </summary>
        </member>
    </members>
</doc>
